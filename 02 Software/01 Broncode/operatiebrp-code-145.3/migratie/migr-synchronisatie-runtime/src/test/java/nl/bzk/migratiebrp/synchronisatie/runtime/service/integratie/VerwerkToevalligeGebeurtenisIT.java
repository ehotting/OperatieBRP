/**
 * This file is copyright 2017 State of the Netherlands (Ministry of Interior Affairs and Kingdom Relations).
 * It is made available under the terms of the GNU Affero General Public License, version 3 as published by the Free Software Foundation.
 * The project of which this file is part, may be found at https://github.com/MinBZK/operatieBRP.
 */

package nl.bzk.migratiebrp.synchronisatie.runtime.service.integratie;

import javax.inject.Inject;
import javax.jms.Message;
import nl.bzk.migratiebrp.bericht.model.brp.BrpBericht;
import nl.bzk.migratiebrp.bericht.model.brp.factory.BrpBerichtFactory;
import nl.bzk.migratiebrp.bericht.model.brp.impl.RegistreerHuwelijkGeregistreerdPartnerschapBijhouding;
import nl.bzk.migratiebrp.bericht.model.brp.impl.RegistreerNaamGeslachtBijhouding;
import nl.bzk.migratiebrp.bericht.model.brp.impl.RegistreerOverlijdenBijhouding;
import nl.bzk.migratiebrp.bericht.model.lo3.factory.Lo3BerichtFactory;
import nl.bzk.migratiebrp.bericht.model.lo3.impl.Lg01Bericht;
import nl.bzk.migratiebrp.bericht.model.sync.impl.VerwerkToevalligeGebeurtenisAntwoordBericht;
import nl.bzk.migratiebrp.bericht.model.sync.impl.VerwerkToevalligeGebeurtenisVerzoekBericht;
import nl.bzk.migratiebrp.synchronisatie.runtime.service.SynchronisatieBerichtService;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.context.ApplicationContext;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.annotation.DirtiesContext.ClassMode;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD)
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"classpath:synchronisatie.xml", "classpath:mock-jms.xml", "classpath:mock-datasource.xml",
        "classpath:/test-dal-beans.xml"}, initializers = {AbstractSynchronisatieIT.PortInitializer.class})
public class VerwerkToevalligeGebeurtenisIT extends AbstractIT {

    @Inject
    private ApplicationContext applicationContext;

    private SynchronisatieBerichtService<VerwerkToevalligeGebeurtenisVerzoekBericht, VerwerkToevalligeGebeurtenisAntwoordBericht> subject;

    @SuppressWarnings("unchecked")
    @Before
    public void setup() {
        subject =
                (SynchronisatieBerichtService<VerwerkToevalligeGebeurtenisVerzoekBericht, VerwerkToevalligeGebeurtenisAntwoordBericht>) applicationContext
                        .getBean(
                                "verwerkToevalligeGebeurtenisService");
    }

    private BrpBericht execute(
            final String lg01,
            final String verzendendeGemeente,
            final String ontvangendeGemeente,
            final String aktenummer,
            final String tb02Inhoud) throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final Lg01Bericht lg01Bericht = (Lg01Bericht) new Lo3BerichtFactory().getBericht(lg01);
        this.persisteerPersoonslijst(lg01Bericht.getLo3Persoonslijst());

        // Tb02 - Echtscheiding
        final VerwerkToevalligeGebeurtenisVerzoekBericht verzoek = new VerwerkToevalligeGebeurtenisVerzoekBericht();
        verzoek.setVerzendendeGemeente(verzendendeGemeente);
        verzoek.setOntvangendeGemeente(ontvangendeGemeente);
        verzoek.setAktenummer(aktenummer);
        verzoek.setTb02InhoudAlsTeletex(tb02Inhoud);

        // Verwerk
        final VerwerkToevalligeGebeurtenisAntwoordBericht antwoord = subject.verwerkBericht(verzoek);

        // Controleer
        Assert.assertNull("Antwoord uit service zou null moeten zijn (bericht is verstuurd naar BRP queue)", antwoord);

        // Verwacht
        final Message message = expectBrpMessage("gbaToevalligeGebeurtenissen");
        Assert.assertNotNull("Geen bericht gevonden op BRP gbaToevalligeGebeurtenissen queue", message);
        final String content = getContent(message);

        System.out.println(content);

        // Parse bericht om XSD te controleren
        return BrpBerichtFactory.SINGLETON.getBericht(content);
    }

    @Test
    public void test03c10t010Geslachtsnaamwijziging() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001406578913000000000000761012030110010140657891301200091348893810210006Lauren0220002BS0230007van "
                        +
                        "der0240008Penninck03100082000010103200040599033000460300410001V6110001E821000405998220008200001018230003PKA851000820000101861000820000101021560210008Samantha0240008Janssens03100081970010103200040599033000460300410001V621000820000101821000405998220008200001018230003PKA851000820000101861000820000101031670210005Karel0230007van der0240008Penninck03100081969010103200040599033000460300410001M621000820000101821000405998220008200001018230003PKA851000820000101861000820000101070776810008200001016910004059970100010801000400018020017200001011435010008710001P08133091000405990920008200001011010001W1030008200001011110017Van Swietenstraat11200022011600063000AA7210001A851000820000101861000820000101";

        // Tb02 - Sluiting huwelijk
        final String verzendendeGemeente = "0518";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "1 H1234";
        final String
                tb02Inhoud =
                "00261011550110010140657891301200091348893810210006Lauren0220002BS0240008Willemse03100082000010103200040599033000460300410001V8110004051881200071 H1234851000820160201510960210006Lauren0220002BS0230007van der0240008Penninck03100082000010103200040599033000460300410001V";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertEquals(RegistreerNaamGeslachtBijhouding.class, brpBericht.getClass());
    }

    @Test
    public void test05c10t010Voornaamwijziging() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001406578913000000000000761012030110010140657891301200091348893810210006Lauren0220002BS0230007van "
                        +
                        "der0240008Penninck03100082000010103200040599033000460300410001V6110001E821000405998220008200001018230003PKA851000820000101861000820000101021560210008Samantha0240008Janssens03100081970010103200040599033000460300410001V621000820000101821000405998220008200001018230003PKA851000820000101861000820000101031670210005Karel0230007van der0240008Penninck03100081969010103200040599033000460300410001M621000820000101821000405998220008200001018230003PKA851000820000101861000820000101070776810008200001016910004059970100010801000400018020017200001011435010008710001P08133091000405990920008200001011010001W1030008200001011110017Van Swietenstraat11200022011600063000AA7210001A851000820000101861000820000101";

        // Tb02 - Voornaam wijziging
        final String verzendendeGemeente = "0518";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "1 M1234";
        final String
                tb02Inhoud =
                "00274011680110010140657891301200091348893810210005Laura0220002BS0230007van "
                        + "der0240008Penninck03100082000010103200040599033000460300410001V8110004051881200071 "
                        + "M1234851000820160201510960210006Lauren0220002BS0230007van der0240008Penninck03100082000010103200040599033000460300410001V";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertTrue(brpBericht instanceof RegistreerNaamGeslachtBijhouding);
    }

    @Test
    public void test08c10t010Transseksualiteit() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001406578913000000000000761012030110010140657891301200091348893810210006Lauren0220002BS0230007van "
                        +
                        "der0240008Penninck03100082000010103200040599033000460300410001V6110001E821000405998220008200001018230003PKA851000820000101861000820000101021560210008Samantha0240008Janssens03100081970010103200040599033000460300410001V621000819700101821000405998220008200001018230003PKA851000820000101861000820000101031670210005Karel0230007van der0240008Penninck03100081969010103200040599033000460300410001M621000819700101821000405998220008200001018230003PKA851000820000101861000820000101070776810008200001016910004059970100010801000400018020017200001011435010008710001P08133091000405990920008200001011010001W1030008200001011110017Van Swietenstraat11200022011600063000AA7210001A851000820000101861000820000101";

        // Tb02 - Sluiting huwelijk
        final String verzendendeGemeente = "0518";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "1 S1234";
        final String
                tb02Inhoud =
                "00274011680110010140657891301200091348893810210006Lauren0220001B0230007van "
                        + "der0240008Penninck03100082000010103200040599033000460300410001M8110004051881200071 "
                        + "S1234851000820160201510960210006Lauren0220002BS0230007van der0240008Penninck03100082000010103200040599033000460300410001V";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertTrue(brpBericht instanceof RegistreerNaamGeslachtBijhouding);
    }

    @Test
    public void test11c10t010Overlijden() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001595257505000000000000717011800110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V6110001E821000405998220008199601018230003PKA851000819960101861000819960101021500210005Sarah0240005Zomer03100081970010103200040599033000460300410001V621000819700101821000405998220008199601018230003PKA851000819960101861000819960101031520210005Simon0240007Hermans03100081969010103200040599033000460300410001M621000819700101821000405998220008199601018230003PKA851000819960101861000819960101070776810008199409306910004059970100010801000400018020017199601011435010008710001P08133091000405990920008199601011010001W1030008199601011110017Van Swietenstraat11200022011600063000AA7210001A851000819960101861000819960101";

        // Tb02 - Sluiting huwelijk
        final String verzendendeGemeente = "0518";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "2 A1234";
        final String
                tb02Inhoud =
                "00193011060110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V0607708100082015010108200040518083000460308110004051881200072 A1234851000820150101";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertTrue(brpBericht instanceof RegistreerOverlijdenBijhouding);
    }

    @Test
    public void test12c10t010Lijkvinding() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001595257505000000000000717011800110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V6110001E821000405998220008199601018230003PKA851000819960101861000819960101021500210005Sarah0240005Zomer03100081970010103200040599033000460300410001V621000819700101821000405998220008199601018230003PKA851000819960101861000819960101031520210005Simon0240007Hermans03100081969010103200040599033000460300410001M621000819700101821000405998220008199601018230003PKA851000819960101861000819960101070776810008199409306910004059970100010801000400018020017199601011435010008710001P08133091000405990920008199601011010001W1030008199601011110017Van Swietenstraat11200022011600063000AA7210001A851000819960101861000819960101";

        // Tb02 - Sluiting huwelijk
        final String verzendendeGemeente = "0518";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "2 G1234";
        final String
                tb02Inhoud =
                "00193011060110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V0607708100082015010108200040518083000460308110004051881200072 G1234851000820150101";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertTrue(brpBericht instanceof RegistreerOverlijdenBijhouding);
    }

    @Test
    public void test13c10t010SluitingHuwelijk() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001595257505000000000000717011800110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V6110001E821000405998220008199601018230003PKA851000819960101861000819960101021500210005Sarah0240005Zomer03100081970010103200040599033000460300410001V621000819700101821000405998220008199601018230003PKA851000819960101861000819960101031520210005Simon0240007Hermans03100081969010103200040599033000460300410001M621000819700101821000405998220008199601018230003PKA851000819960101861000819960101070776810008199409306910004059970100010801000400018020017199601011435010008710001P08133091000405990920008199601011010001W1030008199601011110017Van Swietenstraat11200022011600063000AA7210001A851000819960101861000819960101";

        // Tb02 - Sluiting huwelijk
        final String verzendendeGemeente = "0518";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "3 A1234";
        final String
                tb02Inhoud =
                "00285011060110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V05169011001050420656970210003Jan0240005Steen03100081996010103200040599033000460300410001M06100082015010106200040518063000460301510001H8110004051881200073 A1234851000820150101";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertTrue(brpBericht instanceof RegistreerHuwelijkGeregistreerdPartnerschapBijhouding);
    }

    @Test
    public void test14c10t010OntbindingHuwelijk() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001595257505000000000000922011800110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V6110001E821000405998220008199601018230003PKA851000819960101861000819960101021500210005Sarah0240005Zomer03100081970010103200040599033000460300410001V621000819700101821000405998220008199601018230003PKA851000819960101861000819960101031520210005Simon0240007Hermans03100081969010103200040599033000460300410001M621000819700101821000405998220008199601018230003PKA851000819960101861000819960101052000110010504206569701200095470648090210003Jan0240005Steen03100081996010103200040599033000460300410001M06100082015010106200040518063000460301510001H8110004051881200073 A1234851000820150101861000820150101070776810008199409306910004059970100010801000400018020017199601011435010008710001P08133091000405990920008199601011010001W1030008199601011110017Van Swietenstraat11200022011600063000AA7210001A851000819960101861000819960101";

        // Tb02 - Ontbinding huwelijk
        final String verzendendeGemeente = "0518";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "3 B1234";
        final String
                tb02Inhoud =
                "00418011060110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V051930110010504206569701200095470648090210003Jan0240005Steen03100081996010103200040599033000460300410001M07100082016010107200040518073000460300740001S1510001H8110004051881200073 B1234851000820160101551040210003Jan0240005Steen031000819960101032000405990330004603006100082015010106200040518063000460301510001H";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertTrue(brpBericht instanceof RegistreerHuwelijkGeregistreerdPartnerschapBijhouding);
    }

    @Test
    public void test15c10t010OmzettingGregistreerdPartnerschapNaarHuwelijk() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001595257505000000000000922011800110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V6110001E821000405998220008199601018230003PKA851000819960101861000819960101021500210005Sarah0240005Zomer03100081970010103200040599033000460300410001V621000819700101821000405998220008199601018230003PKA851000819960101861000819960101031520210005Simon0240007Hermans03100081969010103200040599033000460300410001M621000819700101821000405998220008199601018230003PKA851000819960101861000819960101052000110010504206569701200095470648090210003Jan0240005Steen03100081996010103200040599033000460300410001M06100082015010106200040518063000460301510001P8110004051881200075 A1234851000820150101861000820150101070776810008199409306910004059970100010801000400018020017199601011435010008710001P08133091000405990920008199601011010001W1030008199601011110017Van Swietenstraat11200022011600063000AA7210001A851000819960101861000819960101";

        // Tb02 - Ontbinding huwelijk
        final String verzendendeGemeente = "0598";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "3 H1234";
        final String
                tb02Inhoud =
                "00410011060110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V051850110010504206569701200095470648090210003Jan0240005Steen03100081996010103200040599033000460300410001M06100082016010106200040598063000460301510001H8110004059881200073 H1234851000820160101551040210003Jan0240005Steen031000819960101032000405990330004603006100082015010106200040518063000460301510001P";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertTrue(brpBericht instanceof RegistreerHuwelijkGeregistreerdPartnerschapBijhouding);
    }

    @Test
    public void test16c10t010AangaanGeregistreerdPartnerschap() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001595257505000000000000717011800110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V6110001E821000405998220008199601018230003PKA851000819960101861000819960101021500210005Sarah0240005Zomer03100081970010103200040599033000460300410001V621000819700101821000405998220008199601018230003PKA851000819960101861000819960101031520210005Simon0240007Hermans03100081969010103200040599033000460300410001M621000819700101821000405998220008199601018230003PKA851000819960101861000819960101070776810008199409306910004059970100010801000400018020017199601011435010008710001P08133091000405990920008199601011010001W1030008199601011110017Van Swietenstraat11200022011600063000AA7210001A851000819960101861000819960101";

        // Tb02 - Ontbinding huwelijk
        final String verzendendeGemeente = "0518";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "5 A1234";
        final String
                tb02Inhoud =
                "00301011060110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V051850110010504206569701200095470648090210003Jan0240005Steen03100081996010103200040599033000460300410001M06100082015010106200040518063000460301510001P8110004051881200075 A1234851000820150101";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertTrue(brpBericht instanceof RegistreerHuwelijkGeregistreerdPartnerschapBijhouding);
    }

    @Test
    public void test17c10t010BeeindigenGeregistreerdPartnerschap() throws Exception {
        // Lg01 - Voorbereiden persoonslijst
        final String
                lg01 =
                "00000000Lg01000000000000000001595257505000000000000922011800110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V6110001E821000405998220008199601018230003PKA851000819960101861000819960101021500210005Sarah0240005Zomer03100081970010103200040599033000460300410001V621000819700101821000405998220008199601018230003PKA851000819960101861000819960101031520210005Simon0240007Hermans03100081969010103200040599033000460300410001M621000819700101821000405998220008199601018230003PKA851000819960101861000819960101052000110010504206569701200095470648090210003Jan0240005Steen03100081996010103200040599033000460300410001M06100082015010106200040518063000460301510001P8110004051881200075 A1234851000820150101861000820150101070776810008199409306910004059970100010801000400018020017199601011435010008710001P08133091000405990920008199601011010001W1030008199601011110017Van Swietenstraat11200022011600063000AA7210001A851000819960101861000819960101";

        // Tb02 - Ontbinding huwelijk
        final String verzendendeGemeente = "0518";
        final String ontvangendeGemeente = "0599";
        final String aktenummer = "5 B1234";
        final String
                tb02Inhoud =
                "00418011060110010159525750501200091265564530210007Jantine0240007Hermans03100081996010103200040599033000460300410001V051930110010504206569701200095470648090210003Jan0240005Steen03100081996010103200040599033000460300410001M07100082016010107200040518073000460300740001S1510001P8110004051881200075 B1234851000820160101551040210003Jan0240005Steen031000819960101032000405990330004603006100082015010106200040518063000460301510001P";

        // Uitvoeren
        final BrpBericht brpBericht = execute(lg01, verzendendeGemeente, ontvangendeGemeente, aktenummer, tb02Inhoud);
        Assert.assertTrue(brpBericht instanceof RegistreerHuwelijkGeregistreerdPartnerschapBijhouding);
    }
}
