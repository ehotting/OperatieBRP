/**
 * This file is copyright 2017 State of the Netherlands (Ministry of Interior Affairs and Kingdom Relations).
 * It is made available under the terms of the GNU Affero General Public License, version 3 as published by the Free Software Foundation.
 * The project of which this file is part, may be found at https://github.com/MinBZK/operatieBRP.
 */

package nl.bzk.migratiebrp.tools.lg01;

import static java.util.Arrays.asList;

import java.io.IOException;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import nl.bzk.migratiebrp.bericht.model.BerichtSyntaxException;
import nl.bzk.migratiebrp.bericht.model.lo3.Lo3Bericht;
import nl.bzk.migratiebrp.bericht.model.lo3.Lo3Inhoud;
import nl.bzk.migratiebrp.bericht.model.lo3.factory.Lo3BerichtFactory;
import nl.bzk.migratiebrp.bericht.model.lo3.impl.AbstractOngeldigLo3Bericht;
import nl.bzk.migratiebrp.bericht.model.lo3.impl.OnbekendBericht;
import nl.bzk.migratiebrp.conversie.model.exceptions.Lo3SyntaxException;
import nl.bzk.migratiebrp.conversie.model.lo3.herkomst.Lo3ElementEnum;
import nl.bzk.migratiebrp.conversie.model.lo3.syntax.Lo3CategorieWaarde;

import org.springframework.stereotype.Component;

/**
 * Converteer Lg01 bericht String naar een Lo3Persoonslijst model.
 */
@Component
public class Lg01Converter {
    private static final int LG01_BODY_OFFSET = 49;

    public static void main(String[] args) throws IOException, BerichtSyntaxException, Lo3SyntaxException {
        final String
                IV =
                "00000000Lg01000000000000000005613620498000000000005662011920110010561362049801200091015329450210018Jip Alexxx "
                        +
                        "Maarten0240008Jansennn03100081984111103200040014033000460300410001V6110001E821000400148220008199109098230003PKA851000819841111861000819951006022080110010561362049801200091015329450210016Maarten Posttttt0230007van der0240006Jaappp03100081954022203200040014033000460300410001V621000819841111821000400148220008199109098230002PK851000819841111861000819951006032000110010561362049801200091015329450210007Svenner0240008Jansennn03100081960030403200040180033000460300410001M621000819841111821000401188220008200401278230015PL gerelateerde85100082004012786100082004012753171011001056136204980210007Svenner0240008Jansennn03100081960030403200040180033000460300410001M621000819841111821000400148220008199109098230002PK85100081984111186100081991090904086051000400016310003001821000400148220008199207218230002PK851000819841111861000819920721070776810008199309106910004001470100010801000400228020017201308011800532908710001P08251091000401180920008200401141010001W1020009Amsterdam1030008201307101110012De Jacobusss1115012De Jacobusss11200023111600062300BB1170009Amsterdam1180016011801010100673211900160118200200146463141000400001420008200604207210001I85100082013071086100082013071058243091000401180920008200401141010001W1020009Amsterdam1030008200908281110008Neptunus1115008Neptunus11200021511600067904GD1170009Amsterdam1180016011801000001147211900160118200000255335141000400001420008200604207210001T85100082011060686100082011060658166091000401180920008200401141010001W1020009Amsterdam1030008200908281110008Neptunus11200021511600067904GD141000400001420008200604207210001I85100082009082886100082009082858171091000401180920008200401141010001W1020009Amsterdam1030008200612141110013Ebbingestraat11200021511600067907EL141000400001420008200604207210001I85100082006121486100082006121458174091000401180920008200401141010001W1020009Amsterdam1030008200604201110016van Echtenstraat11200024311600067902EL141000400001420008200604207210001I8510008200604208610008200604205809009100040118092000820040114131000400001320008200603307210001A85100082006033086100082006033058191091000401180920008200401141010001W1020009Amsterdam1030008200411241110016van Echtenstraat11200024311600067902EL7210001I831000608000083200082005072983300082006033085100082004112486100082004112458187091000401180920008200401141010001W1020009Amsterdam1030008200401141110012Lodderstraat11200022911600067907EE7210001I831000608000083200082004092083300082004112485100082004011486100082004012758182091000400140920008198411111010001W1020009Groningen1030008200311271110007Parkweg11200024411600069725EJ7210001I831000658110083200082003010883300082004012685100082003112786100082003112758143091000400140920008198411111010001B1020009Groningen1030008200308191110011Kostersgang11200022811600069711CX7210001I85100082003081986100082003081958181091000400140920008198411111010001W1020009Groningen1030008200111271110006Bolder11200025511600069732PC7210001G831000658110083200082003072883300082003081985100082001112786100082001112758139091000400140920008198411111010001W1020009Groningen1030008198601291110008Stuurhut1120001111600069733AA7210001A851000819860129861000819910909091530110010561362049801200091015329450210006Fietss0240008Jansennn031000820111101032000401180330004603081100040118812000710A0653851000820111101861000820111103091830110010561362049801200091015329450210010Jaap Flipp0240011Peetgrapjas0310008200703250320004011803300046030821000401188220008200708288230015PL gerelateerde85100082007082886100082007082859144011001056136204980210010Jaap Flipp0240011Peetgrapjas031000820070325032000401180330004603081100040118812000710B051185100082007082286100082007082259141011001056136204980210010Jaap Flipp0240008Jansennn031000820070325032000401180330004603081100040118812000710A051185100082007032586100082007082211099821000400148220008200305278230036Van rechtswege door meerderjarigheid8510008200212098610008200305276103832100011851000819910603861000819930312121573510002PN3520009NNDHU0GJ53530008201307313540005B01183550008201807313580003167821000401188220008201307318230017Aanvraagformulier851000820130731861000820130801121573510002NI3520009IPH52LC553530008200905293540005B01183550008201405293580003167821000401188220008200905298230017Aanvraagformulier851000820090529861000820090608121803510002NI3520009IB98232323530008200401283540005B01183550008200901283560008200905293570001I3580003167821000401188220008200401288230017Aanvraagformulier851000820090529861000820090529121803510002NI3520009IB28394133530008200308193540005B00143550008200808193560008200401283570001V3580003167821000400148220008200308198230017Aanvraagformulier851000820040128861000820040128140284010006254001851000820120110640158510008201112306402840100062540018510008200612061402840100068525018510008201009291402840100066098018510008201002121402840100068521038510008200910146401585100082009100864028401000685210385100082007082814028401000660320185100082008112564015851000820080718640284010006603201851000820060530140284010006800401851000820081125140284010006852018851000820080331640158510008200608156402840100068520188510008200111191401585100082008030164028401000661200185100082002050714015851000820060403640284010006805001851000820010511140284010006852102851000820060331140158510008200603026402840100068528018510008200109101401585100082005102564028401000660290185100082004061414028401000665000185100082004111514028401000625380185100082004012814028401000625360185100082003112714028401000630001085100082003060714015851000820030418640284010006852104851000819950513140284010006701202851000820030218140284010006710152851000820030213140284010006890201851000820010122140284010006253701851000820000304140284010006250001851000819940211";
        final String
                SYNC =
                "00000000Lg01000000000000000005613620498000000000005108011920110010561362049801200091015329450210018Jip Alexxx "
                        +
                        "Maarten0240008Jansennn03100081984111103200040014033000460300410001V6110001E821000400148220008199109098230003PKA851000819841111861000819951006022080110010561362049801200091015329450210016Maarten Posttttt0230007van der0240006Jaappp03100081954022203200040014033000460300410001V621000819841111821000400148220008199109098230002PK851000819841111861000819951006032000110010561362049801200091015329450210007Svenner0240008Jansennn03100081960030403200040180033000460300410001M621000819841111821000401188220008200401278230015PL gerelateerde85100082004012786100082004012753171011001056136204980210007Svenner0240008Jansennn03100081960030403200040180033000460300410001M621000819841111821000400148220008199109098230002PK85100081984111186100081991090904086051000400016310003001821000400148220008199207218230002PK851000819841111861000819920721070776810008199309106910004001470100010801000400238020017201411171900477308710001P08251091000401180920008200401141010001W1020009Amsterdam1030008201307101110012De Jacobusss1115012De Jacobusss11200023111600062300BB1170009Amsterdam1180016011801010100673211900160118200200146463141000400001420008200604207210001I85100082013071086100082013071058243091000401180920008200401141010001W1020009Amsterdam1030008200908281110008Neptunus1115008Neptunus11200021511600067904GD1170009Amsterdam1180016011801000001147211900160118200000255335141000400001420008200604207210001T85100082011060686100082011060658166091000401180920008200401141010001W1020009Amsterdam1030008200908281110008Neptunus11200021511600067904GD141000400001420008200604207210001I85100082009082886100082009082858171091000401180920008200401141010001W1020009Amsterdam1030008200612141110013Ebbingestraat11200021511600067907EL141000400001420008200604207210001I85100082006121486100082006121458174091000401180920008200401141010001W1020009Amsterdam1030008200604201110016van Echtenstraat11200024311600067902EL141000400001420008200604207210001I8510008200604208610008200604205809009100040118092000820040114131000400001320008200603307210001A85100082006033086100082006033058191091000401180920008200401141010001W1020009Amsterdam1030008200411241110016van Echtenstraat11200024311600067902EL7210001I831000608000083200082005072983300082006033085100082004112486100082004112458187091000401180920008200401141010001W1020009Amsterdam1030008200401141110012Lodderstraat11200022911600067907EE7210001I831000608000083200082004092083300082004112485100082004011486100082004012758182091000400140920008198411111010001W1020009Groningen1030008200311271110007Parkweg11200024411600069725EJ7210001I831000658110083200082003010883300082004012685100082003112786100082003112758143091000400140920008198411111010001B1020009Groningen1030008200308191110011Kostersgang11200022811600069711CX7210001I85100082003081986100082003081958181091000400140920008198411111010001W1020009Groningen1030008200111271110006Bolder11200025511600069732PC7210001G831000658110083200082003072883300082003081985100082001112786100082001112758139091000400140920008198411111010001W1020009Groningen1030008198601291110008Stuurhut1120001111600069733AA7210001A851000819860129861000819910909091580110010561362049801200091015329450210012Pater Flater0240007YÈuksel031000820141212032000401180330004603081100040118812000710B0710851000820141117861000820141117591590110010561362049801200091015329450210012Pater Flater0240008Jansennn031000820141212032000401180330004603081100040118812000710A0710851000820141212861000820141117091520110010561362049801200091015329450210006Fietss0240007YÈuksel031000820111101032000401180330004603081100040118812000710C0653851000820141117861000820141117591530110010561362049801200091015329450210006Fietss0240008Jansennn031000820111101032000401180330004603081100040118812000710A0653851000820111101861000820111103091830110010561362049801200091015329450210010Jaap Flipp0240011Peetgrapjas0310008200703250320004011803300046030821000401188220008200708288230015PL gerelateerde85100082007082886100082007082859144011001056136204980210010Jaap Flipp0240011Peetgrapjas031000820070325032000401180330004603081100040118812000710B051185100082007082286100082007082259141011001056136204980210010Jaap Flipp0240008Jansennn031000820070325032000401180330004603081100040118812000710A051185100082007032586100082007082211099821000400148220008200305278230036Van rechtswege door meerderjarigheid8510008200212098610008200305276103832100011851000819910603861000819930312121573510002PN3520009NNDHU0GJ53530008201307313540005B01183550008201807313580003167821000401188220008201307318230017Aanvraagformulier851000820130731861000820130801121573510002NI3520009IPH52LC553530008200905293540005B01183550008201405293580003167821000401188220008200905298230017Aanvraagformulier851000820090529861000820090608121803510002NI3520009IB98232323530008200401283540005B01183550008200901283560008200905293570001I3580003167821000401188220008200401288230017Aanvraagformulier851000820090529861000820090529121803510002NI3520009IB28394133530008200308193540005B00143550008200808193560008200401283570001V3580003167821000400148220008200308198230017Aanvraagformulier851000820040128861000820040128";
        Lg01Converter convertor = new Lg01Converter();
        final List<Lo3CategorieWaarde> result = convertor.converteerLg01NaarLo3CategorieWaarde(IV);
        for (Lo3CategorieWaarde waarde : result) {
            System.out.println(waarde.getCategorie().toString());
            Map<Lo3ElementEnum, String> elementen = waarde.getElementen();
            TreeMap<Lo3ElementEnum, String> sorted = new TreeMap(new Comparator() {
                @Override
                public int compare(Object o1, Object o2) {
                    return o1.toString().compareTo(o2.toString());
                }
            });
            sorted.putAll(elementen);
            addMissingElementen(sorted, waarde.getCategorie().toString());
            for (Lo3ElementEnum key : sorted.keySet()) {
                System.out.println(key.toString().replace("ELEMENT_", "") + "," + sorted.get(key).toString());
            }
        }
    }

    private static void addMissingElementen(TreeMap<Lo3ElementEnum, String> map, String cat) throws Lo3SyntaxException {

        checkElement(map, "0110", cat, asList("01", "02", "03"), null);
        checkElement(map, "0120", cat, asList("01", "02", "03", "09"), null);
        checkElement(map, "0210", cat, asList("01", "02", "03", "09"), null);
        checkElement(map, "0220", cat, asList("01", "02", "03", "09"), null);
        checkElement(map, "0230", cat, asList("01", "02", "03", "09"), null);
        checkElement(map, "0240", cat, asList("01", "02", "03"), null);
        checkElement(map, "0310", cat, asList("01", "02", "03"), null);
        checkElement(map, "0320", cat, asList("01", "02", "03"), null);
        checkElement(map, "0330", cat, asList("01", "02", "03"), null);
        checkElement(map, "0410", cat, asList("01", "02", "03"), null);
        checkElement(map, "1010", cat, asList("08"), null);
        checkElement(map, "1020", cat, asList("08"), null);
        checkElement(map, "1030", cat, asList("08"), null);
        checkElement(map, "1110", cat, asList("08"), null);
        checkElement(map, "1115", cat, asList("08"), null);
        checkElement(map, "1120", cat, asList("08"), null);
        checkElement(map, "1130", cat, asList("08"), null);
        checkElement(map, "1140", cat, asList("08"), null);
        checkElement(map, "1150", cat, asList("08"), null);
        checkElement(map, "1160", cat, asList("08"), null);
        checkElement(map, "1170", cat, asList("08"), null);
        checkElement(map, "1180", cat, asList("08"), null);
        checkElement(map, "1190", cat, asList("08"), null);
        checkElement(map, "1210", cat, asList("08"), null);
        checkElement(map, "1310", cat, asList("08"), null);
        checkElement(map, "1320", cat, asList("08"), null);
        checkElement(map, "1330", cat, asList("08"), null);
        checkElement(map, "1340", cat, asList("08"), null);
        checkElement(map, "1350", cat, asList("08"), null);
        checkElement(map, "1410", cat, asList("08"), null);
        checkElement(map, "1420", cat, asList("08"), null);

        checkElement(map, "2010", cat, asList("01"), null);
        checkElement(map, "2020", cat, asList("01"), null);
        checkElement(map, "3210", cat, asList("11"), null);
        checkElement(map, "3310", cat, asList("11"), null);

        checkElement(map, "3510", cat, asList("12"), null);
        checkElement(map, "3520", cat, asList("12"), null);
        checkElement(map, "3530", cat, asList("12"), null);
        checkElement(map, "3540", cat, asList("12"), null);
        checkElement(map, "3550", cat, asList("12"), null);
        checkElement(map, "3560", cat, asList("12"), null);
        checkElement(map, "3570", cat, asList("12"), null);
        checkElement(map, "3580", cat, asList("12"), null);
        checkElement(map, "3610", cat, asList("12"), null);
        checkElement(map, "3710", cat, asList("12"), null);

        checkElement(map, "6110", cat, asList("01"), null);
        checkElement(map, "6620", cat, asList("07"), null);
        checkElement(map, "6710", cat, asList("07"), null);
        checkElement(map, "6720", cat, asList("07"), null);
        checkElement(map, "6810", cat, asList("07"), null);
        checkElement(map, "6910", cat, asList("07"), null);
        checkElement(map, "7510", cat, asList("08"), null);
        checkElement(map, "8110", cat, null, asList("07", "08", "11", "12"));
        checkElement(map, "8120", cat, null, asList("07", "08", "11", "12"));
        checkElement(map, "8210", cat, null, asList("07", "08"));
        checkElement(map, "8220", cat, null, asList("07", "08"));
        checkElement(map, "8230", cat, null, asList("07", "08"));
        checkElement(map, "8310", cat, null, asList("07"));
        checkElement(map, "8320", cat, null, asList("07"));
        checkElement(map, "8330", cat, null, asList("07"));
        checkElement(map, "8410", cat, null, asList("07", "12"));
        checkElement(map, "8510", cat, null, asList("07"));
        checkElement(map, "8610", cat, null, asList("07"));

    }

    private static void checkElement(TreeMap<Lo3ElementEnum, String> map, String key) throws Lo3SyntaxException {
        if (!map.containsKey(Lo3ElementEnum.getLO3Element(key))) {
            map.put(Lo3ElementEnum.getLO3Element(key), "");
        }
    }

    private static void checkElement(TreeMap<Lo3ElementEnum, String> map, String key, String huidigeCategorie, List<String> in, List<String> out)
            throws Lo3SyntaxException {
        int cat = Integer.parseInt(huidigeCategorie);
        if (cat > 50) {
            cat = cat - 50;
        }
        String hcat = String.format("%02d", cat);

        if (in != null && in.contains(hcat)) {
            checkElement(map, key);
        } else if (in == null && out != null && !out.contains(hcat)) {
            checkElement(map, key);
        }
    }

    /**
     * Converteert de Lg01 body naar een een lijst van Lo3CategorieWaarde.
     * @param lg01 String
     * @return lo3Inhoud List<Lo3CategorieWaarde>
     * @throws BerichtSyntaxException berichtSyntaxException
     */
    public static List<Lo3CategorieWaarde> converteerLg01NaarLo3CategorieWaarde(final String lg01) throws BerichtSyntaxException {
        if (lg01 == null || "".equals(lg01)) {
            System.err.println("Fout bij het lezen van lg01 Bestand is leeg.");
        } else {
            final Lo3BerichtFactory bf = new Lo3BerichtFactory();
            final Lo3Bericht lo3Bericht = bf.getBericht(lg01);

            if (lo3Bericht instanceof AbstractOngeldigLo3Bericht) {
                System.err.println("Ongeldig bericht " + ((AbstractOngeldigLo3Bericht) lo3Bericht).getMelding());
            } else if (lo3Bericht instanceof OnbekendBericht) {
                System.err.println("Onbekend bericht " + ((OnbekendBericht) lo3Bericht).getMelding());
            } else {
                return Lo3Inhoud.parseInhoud(lg01.substring(LG01_BODY_OFFSET));
            }
        }
        return null;
    }
}
