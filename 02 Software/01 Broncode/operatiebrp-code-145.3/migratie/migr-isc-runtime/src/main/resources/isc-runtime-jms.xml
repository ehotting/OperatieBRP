<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!-- JMS XA ConnectionFactory -->
    <amq:xaConnectionFactory id="activeMqXaConnectionFactory" brokerURL="${routering.activemq.url:tcp://localhost:61616}">
        <amq:redeliveryPolicy>
            <amq:redeliveryPolicy maximumRedeliveries="0"/>
        </amq:redeliveryPolicy>
    </amq:xaConnectionFactory>

    <bean name="autorisatieConnectionFactory,gemeenteConnectionFactory,partijConnectionFactory" class="nl.bzk.migratiebrp.register.client.util.RefBeanFactory">
        <property name="bean" ref="activeMqXaConnectionFactory"/>
    </bean>

    <!-- Atomikos JTA-enabled ConnectionFactory, configured with the vendor's XA factory. -->
    <bean name="iscJmsConnectionFactory" class="com.atomikos.jms.AtomikosConnectionFactoryBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName">
            <!--
             | Tijdens jUnit testen kan de ApplicationContext meerdere keren worden geinstantieerd.
             | Elke keer dient een unique naam gebruikt te worden, anders gaat Atomikos fout.
              -->
            <bean class="nl.bzk.algemeenbrp.jta.util.UniqueName">
                <property name="baseName" value="iscQueues"/>
            </bean>
        </property>
        <property name="xaConnectionFactory" ref="activeMqXaConnectionFactory"/>
        <property name="minPoolSize" value="${isc.queue.minpool:1}"/>
        <property name="maxPoolSize" value="${isc.queue.maxpool:20}"/>
    </bean>

    <!--  ActiveMQ destinations to use  -->
    <amq:queue id="syncAntwoordQueue" physicalName="${routering.queue.sync.antwoord:sync.antwoord}"/>
    <amq:queue id="syncVerzoekQueue" physicalName="${routering.queue.sync.verzoek:sync.verzoek}"/>
    <amq:queue id="voiscOntvangstQueue" physicalName="${routering.queue.voisc.ontvangst:voisc.ontvangst}"/>
    <amq:queue id="voiscVerzendenQueue" physicalName="${routering.queue.voisc.verzenden:voisc.verzenden}"/>
    <amq:queue id="leveringQueue" physicalName="${routering.queue.levering:levering}"/>
    <amq:queue id="notificatieQueue" physicalName="${routering.queue.notificatie:notificatie}"/>

    <amq:topic id="partijRegisterTopic" physicalName="${routering.topic.partij:partij.register}"/>
    <amq:queue id="partijVerzoekQueue" physicalName="${routering.queue.partij:partij.verzoek}"/>
    <amq:topic id="autorisatieRegisterTopic" physicalName="${routering.topic.autorisatie:autorisatie.register}"/>
    <amq:queue id="autorisatieVerzoekQueue" physicalName="${routering.queue.autorisatie:autorisatie.verzoek}"/>

    <!-- Template  -->
    <bean name="syncVerzoekJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="iscJmsConnectionFactory"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestination" ref="syncVerzoekQueue"/>
    </bean>

    <!-- Template  -->
    <bean name="voiscVerzendenJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="iscJmsConnectionFactory"/>
        <property name="sessionTransacted" value="true"/>
        <property name="defaultDestination" ref="voiscVerzendenQueue"/>
    </bean>
</beans>
