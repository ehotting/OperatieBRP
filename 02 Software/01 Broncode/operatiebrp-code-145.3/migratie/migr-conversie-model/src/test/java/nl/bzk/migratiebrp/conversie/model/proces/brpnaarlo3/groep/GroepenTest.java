/**
 * This file is copyright 2017 State of the Netherlands (Ministry of Interior Affairs and Kingdom Relations).
 * It is made available under the terms of the GNU Affero General Public License, version 3 as published by the Free Software Foundation.
 * The project of which this file is part, may be found at https://github.com/MinBZK/operatieBRP.
 */

package nl.bzk.migratiebrp.conversie.model.proces.brpnaarlo3.groep;

import nl.bzk.migratiebrp.conversie.model.brp.attribuut.BrpBoolean;
import nl.bzk.migratiebrp.conversie.model.brp.attribuut.BrpSoortRelatieCode;
import nl.bzk.migratiebrp.conversie.model.proces.brpnaarlo3.BrpOuder1GezagInhoud;
import nl.bzk.migratiebrp.conversie.model.proces.brpnaarlo3.BrpOuder2GezagInhoud;
import nl.bzk.migratiebrp.conversie.model.proces.brpnaarlo3.BrpVerbintenisInhoud;
import nl.bzk.migratiebrp.conversie.model.testutils.EqualsAndHashcodeTester;
import org.junit.Assert;
import org.junit.Test;

public class GroepenTest {

    @Test
    public void testBrpVerbintenisInhoud() throws NoSuchMethodException, IllegalAccessException {
        EqualsAndHashcodeTester.testEqualsHashcodeAndToString(
                new BrpVerbintenisInhoud(BrpSoortRelatieCode.FAMILIERECHTELIJKE_BETREKKING),
                new BrpVerbintenisInhoud(BrpSoortRelatieCode.FAMILIERECHTELIJKE_BETREKKING),
                new BrpVerbintenisInhoud(BrpSoortRelatieCode.HUWELIJK));

        Assert.assertFalse(new BrpVerbintenisInhoud(null).isLeeg()); // nooit leeg
    }

    @Test
    public void testBrpOuder1GezagInhoud() throws NoSuchMethodException, IllegalAccessException {
        EqualsAndHashcodeTester.testEqualsHashcodeAndToString(new BrpOuder1GezagInhoud(BrpBoolean.wrap(Boolean.TRUE, null)), new BrpOuder1GezagInhoud(
                BrpBoolean.wrap(Boolean.TRUE, null)), new BrpOuder1GezagInhoud(BrpBoolean.wrap(Boolean.FALSE, null)));

        Assert.assertFalse(new BrpOuder1GezagInhoud(BrpBoolean.wrap(Boolean.TRUE, null)).isLeeg());
    }

    @Test
    public void testBrpOuder2GezagInhoud() throws NoSuchMethodException, IllegalAccessException {
        EqualsAndHashcodeTester.testEqualsHashcodeAndToString(new BrpOuder2GezagInhoud(BrpBoolean.wrap(Boolean.TRUE, null)), new BrpOuder2GezagInhoud(
                BrpBoolean.wrap(Boolean.TRUE, null)), new BrpOuder2GezagInhoud(BrpBoolean.wrap(Boolean.FALSE, null)));

        Assert.assertFalse(new BrpOuder2GezagInhoud(BrpBoolean.wrap(Boolean.TRUE, null)).isLeeg());
    }
}
