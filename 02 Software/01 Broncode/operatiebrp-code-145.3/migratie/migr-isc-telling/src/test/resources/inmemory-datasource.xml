<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!-- Properties -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    

	<bean id="tellingDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="driverClassName" value="org.hsqldb.jdbc.JDBCDriver" />
		<property name="url" value="jdbc:hsqldb:mem:activemq" />	
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

    <jdbc:initialize-database ignore-failures="ALL" data-source="tellingDataSource">
    	<jdbc:script location="classpath:sql/hsqldb4postgres.sql"  />
        <jdbc:script location="classpath:sql/mig-drop.sql"  />
        <jdbc:script location="classpath:sql/jbpm-drop.sql"  />
        <jdbc:script location="classpath:sql/qrtz-drop.sql" />
    </jdbc:initialize-database>
    <jdbc:initialize-database data-source="tellingDataSource">
        <jdbc:script location="classpath:sql/jbpm-create.sql" />
        <jdbc:script location="classpath:sql/mig-create.sql" />
        <jdbc:script location="classpath:sql/mig-data.sql" />
        <jdbc:script location="classpath:sql/qrtz-create.sql" />
    </jdbc:initialize-database>



	<bean id="atomikosSystemProperties" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetClass" value="java.lang.System" />
                <property name="targetMethod" value="getProperties" />
            </bean>
        </property>
        <property name="targetMethod" value="putAll" />
        <property name="arguments">
        	<props>
                <prop key="com.atomikos.icatch.no_file">true</prop>
                <prop key="com.atomikos.icatch.hide_init_file_path">false</prop>
	            <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
            </props>
        </property>
    </bean>

	<bean id="atomikosUserTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp" init-method="init" destroy-method="shutdownForce" depends-on="atomikosSystemProperties">
	    <constructor-arg>
	        <props>
	            <prop key="com.atomikos.icatch.max_timeout">${atomikos.max.timeout:300}000</prop>
	            <prop key="com.atomikos.icatch.default_jta_timeout">${atomikos.default.timeout:10}000</prop>
	            <prop key="com.atomikos.icatch.max_actives">${atomikos.max.actives:50}</prop>
	            <prop key="com.atomikos.icatch.enable_logging">${atomikos.enable_logging:true}</prop>
	            <prop key="com.atomikos.icatch.tm_unique_name">${atomikos.unique.name:isc-runtime}-</prop>
	            <prop key="com.atomikos.icatch.serial_jta_transactions">true</prop>
	            <prop key="com.atomikos.icatch.force_shutdown_on_vm_exit">false</prop>
	            <prop key="com.atomikos.icatch.log_base_name">${atomikos.unique.name:isc-runtime}-tmlog-</prop>
	            <prop key="com.atomikos.icatch.log_base_dir">${atomikos.base.dir:target/atomikos}</prop>
	            <prop key="com.atomikos.icatch.checkpoint_interval">500</prop>
	            <prop key="com.atomikos.icatch.threaded_2pc">false</prop>
	        </props>
	    </constructor-arg>
	</bean>

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close"  depends-on="atomikosUserTransactionService">
	   <property name="startupTransactionService" value="false"/>
	   <property name="forceShutdown" value="true" />
	</bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="atomikosUserTransactionService">
        <property name="transactionTimeout"><value>${atomikos.default.timeout:10}</value></property>
    </bean>

    <bean name="tellingTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager"><ref bean="atomikosTransactionManager"  /></property>
        <property name="userTransaction"><ref bean="atomikosUserTransaction"  /></property>
    </bean>
</beans>
