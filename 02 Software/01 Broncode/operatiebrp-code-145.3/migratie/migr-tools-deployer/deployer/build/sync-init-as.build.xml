<project name="IV Synchronisatie Service" basedir="." default="fail">

    <!--
     | Algemene properties
     |
     | server.host
     | server.username
     | server.password
     |
     | File properties
     |
     | application.source
     | application.file
     |
     | SYNC properties
     |
     | sync.database.host
     | sync.database.schema
     | sync.database.username
     | sync.database.password
     |
     | isc.queue.url
     |
     | hornet.queue.host
     | hornet.queue.port
     | hornet.queue.brp
     | hornet.queue.lo3
     |
     | JMX properties
     |
     | synchronisatie.jmx.serialize.port.naarLo3
     | synchronisatie.jmx.serialize.port.naarBrp
    -->

    <property name="application.directory.naarLo3" value="synchronisatie-naarLo3"/>
    <property name="application.directory.naarBrp" value="synchronisatie-naarBrp"/>

    <target name="checkProperties">
        <fail unless="server.host" message="server.host property is verplicht."/>
        <fail unless="server.username" message="server.username property is verplicht."/>
        <fail unless="server.password" message="server.password property is verplicht."/>
        <fail unless="synchronisatie.jmx.serialize.port.naarLo3"
              message="synchronisatie.jmx.serialize.port.naarLo3 property is verplicht."/>
        <fail unless="synchronisatie.jmx.serialize.port.naarBrp"
              message="synchronisatie.jmx.serialize.port.naarBrp property is verplicht."/>
    </target>

    <target name="checkInstallProperties" depends="checkProperties">
        <!-- Check file settings -->
        <fail unless="application.source"
              message="application.source property is verplicht bij het installeren."/>
        <fail unless="application.file"
              message="application.file property is verplicht bij het installeren."/>

        <!-- Check file exists -->
        <fail message="${application.source}/${application.file} bestaat niet (of leidt niet tot exact 1 bestand).">
            <condition>
                <not>
                    <resourcecount count="1">
                        <fileset dir="${application.source}">
                            <include name="${application.file}"/>
                        </fileset>
                    </resourcecount>
                </not>
            </condition>
        </fail>

        <fail unless="sync.database.host" message="sync.database.host property is verplicht."/>
        <fail unless="sync.database.schema" message="sync.database.schema property is verplicht."/>
        <fail unless="sync.database.username"
              message="sync.database.username property is verplicht."/>
        <fail unless="sync.database.password"
              message="sync.database.password property is verplicht."/>
    </target>

    <target name="install" depends="checkInstallProperties,createLocalConfigurationFiles">
        <antcall target="installLo3"/>
        <antcall target="installBrp"/>
    </target>

    <target name="installLo3">
        <echo message="Copying ${ant.project.name}"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd /tmp; mkdir ${application.directory.naarLo3}; cd ${application.directory.naarLo3}; rm -rf *;"/>

        <scp todir="${server.username}:${server.password}@${server.host}:/tmp/${application.directory.naarLo3}"
             trust="true" failonerror="true">
            <fileset dir="${application.source}">
                <include name="${application.file}"/>
            </fileset>
        </scp>

        <echo message="Unpacking ${ant.project.name}"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; mkdir ${application.directory.naarLo3}; cd ${application.directory.naarLo3}; unzip -o /tmp/${application.directory.naarLo3}/${application.file} -d ."/>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarLo3}; rm *SyncInitNaarBrp*.sh; rm *SyncInitRuntime*.sh; rm *SyncRuntime*.sh; rm *.bat"/>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarLo3}/conf; rm synchronisatie.properties; rm initielevulling.properties; rm log4j2.xml"/>

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory.naarLo3}"
             trust="true" failonerror="true">
            <fileset dir="tmp">
                <include name="runSyncInitNaarLo3Runtime.sh"/>
            </fileset>
        </scp>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarLo3}; chmod u+x *.sh"/>

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory.naarLo3}/conf"
             trust="true">
            <fileset dir="tmp/naarLo3">
                <include name="initielevulling.properties"/>
            </fileset>
        </scp>

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory.naarLo3}/conf/"
             trust="true">
            <fileset dir="deps/algemeen">
                <include name="log4j2.xml"/>
            </fileset>
        </scp>

    </target>

    <target name="installBrp">
        <echo message="Copying ${ant.project.name}"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd /tmp; mkdir ${application.directory.naarBrp}; cd ${application.directory.naarBrp}; rm -rf *;"/>

        <scp todir="${server.username}:${server.password}@${server.host}:/tmp/${application.directory.naarBrp}"
             trust="true" failonerror="true">
            <fileset dir="${application.source}">
                <include name="${application.file}"/>
            </fileset>
        </scp>

        <echo message="Unpacking ${ant.project.name}"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; mkdir ${application.directory.naarBrp}; cd ${application.directory.naarBrp}; unzip -o /tmp/${application.directory.naarBrp}/${application.file} -d ."/>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarBrp}; rm *SyncInitNaarLo3*.sh; rm *SyncInitRuntime*.sh; rm *SyncRuntime*.sh; rm *.bat"/>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarBrp}/conf; rm synchronisatie.properties; rm initielevulling.properties; rm log4j2.xml"/>

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory.naarBrp}"
             trust="true" failonerror="true">
            <fileset dir="tmp">
                <include name="runSyncInitNaarBrpRuntime.sh"/>
            </fileset>
        </scp>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarBrp}; chmod u+x *.sh"/>

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory.naarBrp}/conf"
             trust="true">
            <fileset dir="tmp/naarBrp">
                <include name="initielevulling.properties"/>
            </fileset>
        </scp>

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory.naarBrp}/conf/"
             trust="true">
            <fileset dir="deps/algemeen">
                <include name="log4j2.xml"/>
            </fileset>
        </scp>

    </target>

    <target name="createLocalConfigurationFiles" depends="checkInstallProperties">
        <echo message="Creating configuration files for ${ant.project.name} ..."/>
        <delete dir="tmp"/>
        <mkdir dir="tmp"/>
        <mkdir dir="tmp/naarLo3"/>
        <mkdir dir="tmp/naarBrp"/>

        <echo file="tmp/naarLo3/initielevulling.properties" append="false" force="true">
            sync.database.host=${sync.database.host}
            sync.database.port=5432
            sync.database.name=${sync.database.schema}
            sync.database.username=${sync.database.username}
            sync.database.password=${sync.database.password}

            hornetq.queue.host=${hornet.queue.host}
            hornetq.queue.port=${hornet.queue.port}
            sync.queue.verzoek=${hornet.queue.lo3}
            sync.queue.antwoord=${hornet.queue.lo3}.response

            # JTA
            atomikos.max.timeout=300000
            atomikos.default.timeout=300000
            atomikos.max.actives=50
            atomikos.unique.name=initielevulling-naarlo3-runtime

            synchronisatie.jmx.serialize.port=${synchronisatie.jmx.serialize.port.naarLo3}
        </echo>

        <echo file="tmp/naarBrp/initielevulling.properties" append="false" force="true">
            sync.database.host=${sync.database.host}
            sync.database.port=5432
            sync.database.name=${sync.database.schema}
            sync.database.username=${sync.database.username}
            sync.database.password=${sync.database.password}

            hornetq.queue.host=${hornet.queue.host}
            hornetq.queue.port=${hornet.queue.port}
            sync.queue.verzoek=${hornet.queue.brp}
            sync.queue.antwoord=${hornet.queue.brp}.response

            # JTA
            atomikos.max.timeout=300000
            atomikos.default.timeout=300000
            atomikos.max.actives=50
            atomikos.unique.name=initielevulling-naarbrp-runtime

            synchronisatie.jmx.serialize.port=${synchronisatie.jmx.serialize.port.naarBrp}
        </echo>
    </target>

    <target name="deinstall" depends="checkProperties">
        <echo message="Removing ${ant.project.name}"/>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; rm -Rf ${application.directory.naarBrp}"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; rm -Rf ${application.directory.naarLo3}"/>
    </target>

    <target name="start" depends="checkProperties">
        <echo message="Starting ${ant.project.name}"/>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarBrp}; ./runSyncInitNaarBrpRuntime.sh"/>

        <java classname="nl.bzk.migratiebrp.tools.controle.waiter.SynchronisatieInitializationWaiter"
              failonerror="true">
            <arg line="${waiter.arguments}"/>
            <sysproperty key="jmx.service.url"
                         value="service:jmx:simple://${server.host}:${synchronisatie.jmx.serialize.port.naarBrp}"/>
            <sysproperty key="jmx.service.username" value="admin"/>
            <sysproperty key="jmx.service.password" value="admin"/>
        </java>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarLo3}; ./runSyncInitNaarLo3Runtime.sh"/>

        <java classname="nl.bzk.migratiebrp.tools.controle.waiter.SynchronisatieInitializationWaiter"
              failonerror="true">
            <arg line="${waiter.arguments}"/>
            <sysproperty key="jmx.service.url"
                         value="service:jmx:simple://${server.host}:${synchronisatie.jmx.serialize.port.naarLo3}"/>
            <sysproperty key="jmx.service.username" value="admin"/>
            <sysproperty key="jmx.service.password" value="admin"/>
        </java>

        <echo message="Succesfully started ${ant.project.name}"/>
    </target>

    <target name="stop" depends="checkProperties">
        <echo message="Stopping ${ant.project.name} (and sleeping 15s)"/>

        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarLo3}; ./stopSyncInitRuntime.sh; sleep 15s; tail -n 100 output-1.txt"
                 failonerror="false"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}"
                 password="${server.password}"
                 command="cd ~; cd ${application.directory.naarBrp}; ./stopSyncInitRuntime.sh; sleep 15s; tail -n 100 output-1.txt"
                 failonerror="false"/>
    </target>

    <target name="clean" depends="checkProperties">
    </target>

    <target name="fail">
        <fail message="Call with valid task"/>
    </target>

</project>
