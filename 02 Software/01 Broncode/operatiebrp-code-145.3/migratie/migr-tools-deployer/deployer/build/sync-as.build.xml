<project name="BRP Synchronisatie Service" basedir="." default="fail">

    <!--
     | Algemene properties
     |
     | server.host
     | server.username
     | server.password
     |
     | File properties
     |
     | application.source
     | application.file
     |
     | SYNC properties
     |
     | sync.database.host
     | sync.database.schema
     | sync.database.username
     | sync.database.password
     |
     | isc.queue.url
     |
     | hornet.queue.host
     | hornet.queue.port
     |
     | JMX properties
     |
     | synchronisatie.jmx.serialize.port
     |
    -->

    <property name="application.directory" value="synchronisatie" />

    <target name="checkProperties">
        <fail unless="server.host" message="server.host property is verplicht." />
        <fail unless="server.username" message="server.username property is verplicht." />
        <fail unless="server.password" message="server.password property is verplicht." />
    </target>

    <target name="checkInstallProperties" depends="checkProperties">
        <!-- Check file settings -->
        <fail unless="application.source" message="application.source property is verplicht bij het installeren." />
        <fail unless="application.file" message="application.file property is verplicht bij het installeren." />

        <!-- Check file exists -->
        <fail message="${application.source}/${application.file} bestaat niet (of leidt niet tot exact 1 bestand).">
            <condition>
                <not>
                    <resourcecount count="1" >
                        <fileset dir="${application.source}">
                            <include name="${application.file}" />
                        </fileset>
                    </resourcecount>
                </not>
            </condition>
        </fail>

        <fail unless="sync.database.host" message="sync.database.host property is verplicht." />
        <fail unless="sync.database.schema" message="sync.database.schema property is verplicht." />
        <fail unless="sync.database.username" message="sync.database.username property is verplicht." />
        <fail unless="sync.database.password" message="sync.database.password property is verplicht." />
        <fail unless="synchronisatie.jmx.serialize.port" message="synchronisatie.jmx.serialize.port property is verplicht." />
    </target>


    <target name="install" depends="checkInstallProperties,createLocalConfigurationFiles">
        <echo message="Copying ${ant.project.name}" />
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd /tmp; mkdir ${application.directory}; cd ${application.directory}; rm -rf *;" />

        <scp todir="${server.username}:${server.password}@${server.host}:/tmp/${application.directory}" trust="true" failonerror="true">
            <fileset dir="${application.source}">
                <include name="${application.file}" />
            </fileset>
        </scp>

        <echo message="Unpacking ${ant.project.name}" />
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; mkdir ${application.directory}; cd ${application.directory}; unzip -o /tmp/${application.directory}/${application.file} -d ." />

        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; cd ${application.directory}; rm *Init*.sh" />

        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; cd ${application.directory}/conf; rm synchronisatie.properties; rm initielevulling.properties; rm log4j2.xml" />

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory}" trust="true" failonerror="true">
            <fileset dir="tmp">
                <include name="synchronisatie.properties" />
            </fileset>
        </scp>

        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; cd ${application.directory}; chmod u+x *.sh" />

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory}/conf/" trust="true" >
            <fileset dir="tmp">
                <include name="synchronisatie.properties" />
            </fileset>
        </scp>

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory}/conf/" trust="true" >
            <fileset dir="deps/algemeen">
                <include name="log4j2.xml" />
            </fileset>
        </scp>

    </target>

    <target name="createLocalConfigurationFiles" depends="checkInstallProperties">
        <echo message="Creating configuration files for ${ant.project.name} ..." />
        <delete dir="tmp" />
        <mkdir dir="tmp" />

        <echo file="tmp/synchronisatie.properties" append="false" force="true">
sync.database.host=${sync.database.host}
sync.database.port=5432
sync.database.name=${sync.database.schema}
sync.database.username=${sync.database.username}
sync.database.password=${sync.database.password}

sync.queue.url=${isc.queue.url}
brp.queue.url=${brp.broker.url}
atomikos.unique.name=synchronisatie-runtime

synchronisatie.jmx.serialize.port=${synchronisatie.jmx.serialize.port}
        </echo>
    </target>


    <target name="deinstall" depends="checkProperties">
        <echo message="Removing ${ant.project.name}" />
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; rm -Rf ${application.directory}" />

        <echo message="Succesfully removed ${ant.project.name}" />
    </target>

    <target name="start" depends="checkProperties">
        <echo message="Starting ${ant.project.name}" />
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; cd ${application.directory}; ./runSyncRuntime.sh" />
                 
        <java classname="nl.bzk.migratiebrp.tools.controle.waiter.SynchronisatieInitializationWaiter" failonerror="true">
            <arg line="${waiter.arguments}"/>
            <sysproperty key="jmx.service.url" value="service:jmx:simple://${server.host}:${synchronisatie.jmx.serialize.port}"/>
            <sysproperty key="jmx.service.username" value="admin"/>
            <sysproperty key="jmx.service.password" value="admin"/>
        </java>

        <echo message="Succesfully started ${ant.project.name}" />
    </target>

    <target name="stop" depends="checkProperties">
        <echo message="Stopping ${ant.project.name} (and sleeping 15s)" />
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; cd ${application.directory}; ./stopSyncRuntime.sh; sleep 15s; tail -n 100 output-1.txt" failonerror="false" />

        <echo message="Succesfully stopped ${ant.project.name}" />
    </target>

    <target name="clean" depends="checkProperties">
    </target>

    <target name="fail">
        <fail message="Call with valid task" />
    </target>

</project>