<project name="IV Logging" basedir="." default="fail">

    <!--
     | Algemene properties
     |
     | server.host
     | server.username
     | server.password
     |
     | File properties
     |
     | application.source
     | application.file
     |
     | Init naar BRP properties
     | 
     | logging.database.host
     | logging.database.port
     | logging.database.name
     | logging.database.username
     | logging.database.password
     | 
     | brp.database.host
     | brp.database.port
     | brp.database.name
     | brp.database.username
     | brp.database.password
     | 
     | hornetq.queue.host
     | hornetq.queue.port
     | naarLo3LogQueue.name
     | naarBrpLogQueue.name
     |
    -->

    <property name="application.directory" value="migr-init-logging"/>

    <target name="checkProperties">
        <fail unless="server.host" message="server.host property is verplicht."/>
        <fail unless="server.username" message="server.username property is verplicht."/>
        <fail unless="server.password" message="server.password property is verplicht."/>

        <fail unless="logging.database.host" message="logging.database.host property is verplicht."/>
        <fail unless="logging.database.port" message="logging.database.port property is verplicht."/>
        <fail unless="logging.database.name" message="logging.database.name property is verplicht."/>
        <fail unless="logging.database.username" message="logging.database.username property is verplicht."/>
        <fail unless="logging.database.password" message="logging.database.password property is verplicht."/>

        <fail unless="brp.database.host" message="brp.database.host property is verplicht."/>
        <fail unless="brp.database.port" message="brp.database.port property is verplicht."/>
        <fail unless="brp.database.name" message="brp.database.name property is verplicht."/>
        <fail unless="brp.database.username" message="brp.database.username property is verplicht."/>
        <fail unless="brp.database.password" message="brp.database.password property is verplicht."/>

        <fail unless="hornetq.queue.host" message="hornetq.queue.host property is verplicht."/>
        <fail unless="hornetq.queue.port" message="hornetq.queue.port property is verplicht."/>
        <fail unless="naarLo3LogQueue.name" message="naarLo3LogQueue.name property is verplicht."/>
        <fail unless="naarBrpLogQueue.name" message="naarBrpLogQueue.name property is verplicht."/>
    </target>

    <target name="checkInstallProperties" depends="checkProperties">
        <!-- Check file settings -->
        <fail unless="application.source" message="application.source property is verplicht bij het installeren."/>
        <fail unless="application.file" message="application.file property is verplicht bij het installeren."/>

        <!-- Check file exists -->
        <fail message="${application.source}/${application.file} bestaat niet (of leidt niet tot exact 1 bestand).">
            <condition>
                <not>
                    <resourcecount count="1">
                        <fileset dir="${application.source}">
                            <include name="${application.file}"/>
                        </fileset>
                    </resourcecount>
                </not>
            </condition>
        </fail>

    </target>

    <target name="install" depends="checkInstallProperties,createLocalConfigurationFile">
        <echo message="Installing ${ant.project.name} ...."/>
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd /tmp; mkdir ${application.directory}; cd ${application.directory}; rm -rf *;"/>

        <echo message="Copying ${application.file}"/>
        <scp todir="${server.username}:${server.password}@${server.host}:/tmp/${application.directory}" trust="true"
             failonerror="true">
            <fileset dir="${application.source}">
                <include name="${application.file}"/>
            </fileset>
        </scp>

        <echo message="Unpacking ${application.file}"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; mkdir ${application.directory}; cd ${application.directory}; unzip -o /tmp/${application.directory}/${application.file} -d .;"/>

        <echo message="Copying configuration files"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; cd ${application.directory}/conf; rm init-logging-runtime.properties; rm log4j2.xml;"/>
        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory}/conf" trust="true"
             failonerror="true">
            <fileset dir="tmp">
                <include name="init-logging-runtime.properties"/>
            </fileset>
        </scp>

        <scp todir="${server.username}:${server.password}@${server.host}:~/${application.directory}/conf" trust="true">
            <fileset dir="deps/algemeen">
                <include name="log4j2.xml"/>
            </fileset>
        </scp>

    </target>

    <target name="createLocalConfigurationFile" depends="checkProperties">
        <echo message="Creating configuration ${ant.project.name}"/>
        <delete dir="tmp"/>
        <mkdir dir="tmp"/>
        <echo file="tmp/init-logging-runtime.properties" append="false" force="true"><![CDATA[# gbav database verbinding
logging.database.host=${logging.database.host}
logging.database.port=${logging.database.port}
logging.database.name=${logging.database.name}
logging.database.username=${logging.database.username}
logging.database.password=${logging.database.password}

#brp database verbinding
brp.database.host=${brp.database.host}
brp.database.port=${brp.database.port}
brp.database.name=${brp.database.name}
brp.database.username=${brp.database.username}
brp.database.password=${brp.database.password}

#queues
hornetq.queue.host=${hornetq.queue.host}
hornetq.queue.port=${hornetq.queue.port}
naarLo3LogQueue.name=${naarLo3LogQueue.name}
naarBrpLogQueue.name=${naarBrpLogQueue.name}
]]></echo>
    </target>

    <target name="deinstall" depends="checkProperties">
        <echo message="Removing ${ant.project.name}"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; rm -Rf ${application.directory}"/>
    </target>

    <target name="start" depends="checkProperties">
        <echo message="Starting ${ant.project.name}"/>

        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 command="cd ~; cd ${application.directory}; ./runInitLogging.sh"/>

        <echo message="Succesfully started ${ant.project.name}" />
    </target>

    <target name="stop" depends="checkProperties">
        <echo message="Stopping ${ant.project.name} (and sleeping 15s)"/>
        <sshexec host="${server.host}" trust="true" username="${server.username}" password="${server.password}"
                 failonerror="false"
                 command="cd ~; cd ${application.directory}; ./stopInitLogging.sh"/>
    </target>

    <target name="clean" depends="checkProperties">
    </target>

    <target name="fail">
        <fail message="Call with valid task"/>
    </target>

</project>