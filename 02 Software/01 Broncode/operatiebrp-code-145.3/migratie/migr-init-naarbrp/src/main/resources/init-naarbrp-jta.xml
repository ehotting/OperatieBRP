<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <tx:annotation-driven />

    <bean id="atomikosSystemProperties" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetClass" value="java.lang.System" />
                <property name="targetMethod" value="getProperties" />
            </bean>
        </property>
        <property name="targetMethod" value="putAll" />
        <property name="arguments">
        	<props>
                <prop key="com.atomikos.icatch.no_file">true</prop>
                <prop key="com.atomikos.icatch.hide_init_file_path">false</prop>
	            <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
            </props>
        </property>
    </bean>

    <bean id="atomikosLogBaseCreator" class="nl.bzk.algemeenbrp.jta.util.DirectoryCreator">
    	<property name="directory" value="${atomikos.base.dir:work/atomikos}" />
    </bean>

    <bean id="atomikosUserTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp" 
          init-method="init" destroy-method="shutdownForce" depends-on="atomikosSystemProperties,atomikosLogBaseCreator">
        <constructor-arg>
            <props>
            	<!-- Maximale timeout hier naar Integer.MAX_VALUE+'000' zodat de 'laad' SQL er niet uitklapt. -->
                <prop key="com.atomikos.icatch.max_timeout">${atomikos.max.timeout:2147483647000}</prop>
                <prop key="com.atomikos.icatch.default_jta_timeout">${atomikos.default.timeout:30000}</prop>
                <prop key="com.atomikos.icatch.max_actives">${atomikos.max.actives:50}</prop>
                <prop key="com.atomikos.icatch.enable_logging">${atomikos.enable_logging:true}</prop>
                <prop key="com.atomikos.icatch.tm_unique_name">${atomikos.unique.name:init-naarbrp}-</prop>
                <prop key="com.atomikos.icatch.serial_jta_transactions">false</prop>
                <prop key="com.atomikos.icatch.force_shutdown_on_vm_exit">false</prop>
                <prop key="com.atomikos.icatch.log_base_name">${atomikos.unique.name:init-naarbrp}-tmlog-</prop>
                <prop key="com.atomikos.icatch.log_base_dir">${atomikos.base.dir:work/atomikos}</prop>
                <prop key="com.atomikos.icatch.checkpoint_interval">500</prop>
                <prop key="com.atomikos.icatch.threaded_2pc">true</prop>
            </props>
        </constructor-arg>
    </bean>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close"  depends-on="atomikosUserTransactionService">
       <property name="startupTransactionService" value="false"/>
       <property name="forceShutdown" value="true" />
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="atomikosUserTransactionService">
    </bean>

    <bean name="init-runtime-transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction"  />
    </bean>
</beans>
