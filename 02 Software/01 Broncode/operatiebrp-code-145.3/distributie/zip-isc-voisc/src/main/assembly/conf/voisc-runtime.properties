# DATABASE
voisc.database.driver=org.postgresql.xa.PGXADataSource
voisc.database.host=${voisc.database.host}
voisc.database.port=${voisc.database.port}
voisc.database.name=${voisc.database.name}
voisc.database.username=${voisc.database.username}
voisc.database.password=${voisc.database.password}
voisc.database.maxpool=20
voisc.database.minpool=1
voisc.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ROUTERING
voisc.queue.minpool=1
voisc.queue.maxpool=20
voisc.queue.receivetimeout=30000

routering.activemq.url=${routering.activemq.url}
routering.queue.voisc.ontvangst=voisc.ontvangst
routering.queue.voisc.verzenden=voisc.verzenden
routering.topic.gemeente.register=gemeente.register
routering.queue.gemeente.register=gemeente.verzoek

# TRANSACTIES
atomikos.max.timeout=300000
atomikos.default.timeout=10000
atomikos.max.actives=50
atomikos.unique.name=voisc-runtime
atomikos.base.dir=work/atomikos

# MAILBOX
mailbox.host=${mailbox.host}
mailbox.port=${mailbox.port}
mailbox.ssl.keystore.password=changeit
mailbox.ssl.key.password=changeit
mailbox.ssl.truststore.password=changeit

#
# Te bedienen mailboxen:
#
#  - Indien leeg: alle mailboxen (gemeenten,centraal)
#  - Indien gevuld met negatieve nummers: alle mailboxen (gemeenten,centraal), behalve de genoemde
#  - Indien gevuld met postieve nummers: de genoemde mailboxen
#
voisc.mailboxen=

# JOBS
voisc.job.isc.cron=0/5 * * * * ?
voisc.job.mailbox.cron=0/5 * * * * ?
voisc.job.opschonen.cron=0 0 0/1 * * ?
voisc.job.opschonen.wachttijd=75
voisc.job.herstellen.cron=0 0 0/1 * * ?
voisc.job.herstellen.wachttijd=6

# STARTUP
voisc.start.check.mailbox=true
voisc.start.check.config=false

# REGISTER CLIENT
registerclient.partij.autostart=true
