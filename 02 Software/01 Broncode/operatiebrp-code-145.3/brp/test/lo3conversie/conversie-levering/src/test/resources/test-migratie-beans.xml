<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <beans profile="!memoryDS">
        <context:property-placeholder location="classpath:datasource.properties"/>
    </beans>
    <beans profile="memoryDS">
        <context:property-placeholder location="classpath:inmemory.properties"/>
    </beans>

    <beans>
        <import resource="main-beans.xml"/>
    </beans>

    <beans>
        <!-- Construct Atomikos UserTransactionManager, needed to configure Spring -->
        <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
            <!-- IMPORTANT: disable startup because the userTransactionService above does this -->
            <property name="startupTransactionService" value="false"/>

            <!--  when close is called, should we force transactions to terminate or not? -->
            <property name="forceShutdown" value="true"/>
        </bean>

        <!-- Also use Atomikos UserTransactionImp, needed to configure Spring  -->
        <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"/>

        <!-- Configure the Spring framework to use JTA transactions from Atomikos -->
        <bean id="syncDalTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
            <property name="transactionManager" ref="atomikosTransactionManager"/>
            <property name="userTransaction" ref="atomikosUserTransaction"/>
            <property name="transactionManagerName" value="migratieTM"/>
        </bean>
    </beans>

    <beans profile="memoryDS">
        <bean id="syncDalJpaVendorAdapter"
              class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            <property name="showSql" value="false"/>
            <property name="generateDdl" value="false"/>
            <property name="database" value="HSQL"/>
            <property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect"/>
        </bean>

        <bean id="syncDalEntityManagerFactory"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="syncDalTransactionManager">
            <property name="persistenceUnitName" value="BrpEntities"/>
            <property name="jtaDataSource" ref="syncDalDataSource"/>
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.cache.use_second_level_cache">false</prop>
                    <prop key="hibernate.cache.use_query_cache">false</prop>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
                    <prop key="hibernate.cache.region.factory_class">
                        org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
                    </prop>
                    <prop key="net.sf.ehcache.configurationResourceName">synchronisatie-dal-stamtabel-ehcache.xml</prop>
                    <prop key="hibernate.generate_statistics">false</prop>
                    <prop key="hibernate.transaction.jta.platform">
                        nl.bzk.algemeenbrp.jta.AtomikosJtaPlatform
                    </prop>
                </props>
            </property>
        </bean>

        <bean name="syncDalDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
            <property name="uniqueResourceName">
                <!--
                 | Tijdens jUnit testen kan de ApplicationContext meerdere keren worden geinstantieerd.
                 | Elke keer dient een unique naam gebruikt te worden, anders gaat Atomikos fout.
                  -->
                <bean class="nl.bzk.algemeenbrp.jta.util.UniqueName">
                    <property name="baseName" value="syncDalDatabase"/>
                </bean>
            </property>
            <property name="xaDataSourceClassName" value="org.hsqldb.jdbc.pool.JDBCXADataSource"/>
            <property name="xaProperties">
                <bean class="nl.bzk.algemeenbrp.jta.database.XAPropertiesAdapter">
                    <property name="driver" value="org.hsqldb.jdbc.pool.JDBCXADataSource"/>
                    <property name="url" value="jdbc:hsqldb:mem:testDb"/>
                    <property name="user" value="sa"/>
                    <property name="password" value=""/>
                </bean>
            </property>
            <property name="maxPoolSize" value="${brp.bevraging.database.maxpool:20}"/>
            <property name="minPoolSize" value="${brp.bevraging.database.minpool:1}"/>
        </bean>
    </beans>

    <beans profile="!memoryDS">

        <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            <property name="showSql" value="false"/>
            <property name="generateDdl" value="false"/>
            <property name="database" value="POSTGRESQL"/>
            <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect"/>
        </bean>

        <bean id="syncDalEntityManagerFactory"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="persistenceUnitName" value="BrpEntities"/>
            <property name="dataSource" ref="syncDalDataSource"/>
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.cache.use_second_level_cache">false</prop>
                    <prop key="hibernate.cache.use_query_cache">false</prop>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
                    <prop key="hibernate.cache.region.factory_class">
                        org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
                    </prop>
                    <prop key="net.sf.ehcache.configurationResourceName">synchronisatie-dal-stamtabel-ehcache.xml</prop>
                    <prop key="hibernate.generate_statistics">false</prop>
                    <prop key="hibernate.transaction.jta.platform">
                        nl.bzk.algemeenbrp.jta.AtomikosJtaPlatform
                    </prop>
                </props>
            </property>
        </bean>

        <bean id="syncDalDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
              destroy-method="close">
            <property name="uniqueResourceName">
                <bean class="nl.bzk.algemeenbrp.jta.util.UniqueName">
                    <property name="baseName" value="syncDalDatabase"/>
                </bean>
            </property>

            <property name="xaDataSourceClassName" value="${database.driver:org.postgresql.xa.PGXADataSource}"/>
            <property name="xaProperties">
                <props>
                    <prop key="ServerName">${database.host:localhost}</prop>
                    <prop key="PortNumber">${database.port:5432}</prop>
                    <prop key="DatabaseName">${database.name:BRP}</prop>
                    <prop key="User">${database.username:postgres}</prop>
                    <prop key="Password">${database.password:postgres}</prop>
                </props>
            </property>
            <property name="maxPoolSize" value="${database.maxpool:200}"/>
            <property name="minPoolSize" value="${database.minpool:1}"/>
            <property name="testQuery" value="select 41+1"/>
        </bean>
    </beans>

    <beans>
        <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
    </beans>
</beans>
