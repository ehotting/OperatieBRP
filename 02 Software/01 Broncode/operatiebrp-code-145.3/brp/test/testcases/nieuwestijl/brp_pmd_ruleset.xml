<?xml version="1.0"?>
<ruleset name="BRP code ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <description>
        Deze ruleset is de configuratie van de PMD regels gebruikt binnen de projecten van de BRP.
    </description>
    <!-- In dit configuratie bestand wordt expliciet per bestaande ruleset van PMD aangegeven welke regel voor de BRP
         projecten worden gehanteerd.
         De regels waarvoor de prioriteit aangepast is of de configuratie afwijkt van de standaard is dit in dit bestand
         aangegeven. Vervolgens wordt dit bestand als bron gebruikt voor de configuratie op Sonar.
    -->

    <!-- Regels vanuit basic.xml -->

    <rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
    <rule ref="rulesets/java/basic.xml/BooleanInstantiation"/>
    <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray"/>
    <rule ref="rulesets/java/basic.xml/BrokenNullCheck"/>
    <rule ref="rulesets/java/basic.xml/BigIntegerInstantiation"/>
    <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements"/>
    <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement"/>

    <rule ref="rulesets/java/braces.xml"/>

    <rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException" />
    <rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable"/>

    <!-- COMMENTS regels worden niet gebruikt binnen de BRP of worden al door Checkstyle gechecked -->
    <!--
    <rule ref="rulesets/java/comments.xml"/ -->

    <!-- CODESIZE regels -->
    <rule ref="rulesets/java/codesize.xml/NcssMethodCount"/>
    <rule ref="rulesets/java/codesize.xml/NcssTypeCount"/>

    <!-- CONTROVERSIAL regels -->
    <rule ref="rulesets/java/controversial.xml/DontImportSun"/>

    <!-- COUPLING regels -->
    <rule ref="rulesets/java/coupling.xml/LooseCoupling"/>

    <!-- DESIGN regels -->
    <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic" />
    <rule ref="rulesets/java/design.xml/CloseResource" />
    <rule ref="rulesets/java/design.xml/EqualsNull" />
    <rule ref="rulesets/java/design.xml/IdempotentOperations"/>
    <rule ref="rulesets/java/design.xml/InstantiationToGetClass" />
    <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause" />
    <rule ref="rulesets/java/design.xml/SimplifyConditional" />
    <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals" />
    <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod"/>
    <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn" />
    <rule ref="rulesets/java/design.xml/PreserveStackTrace" />
    <rule ref="rulesets/java/design.xml/SingularField" />
    <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass"/>

    <!-- EMPTY regels -->
    <rule ref="rulesets/java/empty.xml/EmptyCatchBlock"/>
    <rule ref="rulesets/java/empty.xml/EmptyIfStmt"/>
    <rule ref="rulesets/java/empty.xml/EmptyWhileStmt"/>
    <rule ref="rulesets/java/empty.xml/EmptyTryBlock"/>
    <rule ref="rulesets/java/empty.xml/EmptyFinallyBlock"/>
    <rule ref="rulesets/java/empty.xml/EmptySwitchStatements"/>
    <rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock"/>
    <rule ref="rulesets/java/empty.xml/EmptyStaticInitializer"/>

    <!-- FINALIZER regels -->
    <rule ref="rulesets/java/finalizers.xml/EmptyFinalizer"/>
    <rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded"/>
    <rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize"/>
    <rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize"/>

    <rule ref="rulesets/java/imports.xml/DontImportJavaLang"/>

    <!-- J2EE regels worden niet gebruikt binnen BRP projecten -->
    <!-- rule ref="rulesets/java/j2ee.xml"/ -->
    <!-- JAVABEAN regels worden niet gebruikt -->
    <!-- rule ref="rulesets/java/javabeans.xml"/ -->

    <rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace"/>
    <rule ref="rulesets/java/logging-java.xml/SystemPrintln"/>

    <rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator"/>
    <rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap"/>
    <rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList"/>
    <rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier"/>
    <rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier"/>
    <rule ref="rulesets/java/migrating.xml/IntegerInstantiation"/>


    <rule ref="rulesets/java/naming.xml/AvoidDollarSigns"/>
    <rule ref="rulesets/java/naming.xml/ClassNamingConventions"/>
    <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass"/>
    <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName"/>

    <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName"/>
    <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName"/>

    <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops"/>
    <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector"/>
    <rule ref="rulesets/java/optimizations.xml/UseArraysAsList"/>

    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE"/>
    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable"/>
    <rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException"/>
    <!-- Regel gedisabled omdat dit door migratie wel wordt gebruikt, onder andere uit Essential Java 2nd Edition als alternatief voor IllegalArgument Exception gebruikt
    <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException"/>
    -->
    <rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes"/>
    <rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl"/>
    <rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException"/>

    <!-- STRINGS regels -->
    <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals"/>
    <rule ref="rulesets/java/strings.xml/InefficientStringBuffering"/>
    <rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar"/>
    <rule ref="rulesets/java/strings.xml/StringInstantiation"/>
    <rule ref="rulesets/java/strings.xml/StringToString"/>
    <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange"/>
    <rule ref="rulesets/java/strings.xml/UseIndexOfChar"/>
    <rule ref="rulesets/java/strings.xml/UseStringBufferLength"/>
    <rule ref="rulesets/java/strings.xml/UselessStringValueOf"/>

    <rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly" />


    <!-- LouseCoupling ook aanwezig in coupling.xml, welke willen we gebruiken??? -->
    <rule ref="rulesets/java/typeresolution.xml/LooseCoupling" />
    <rule ref="rulesets/java/typeresolution.xml/SignatureDeclareThrowsException" />

    <rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals"/>
    <rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable"/>
    <rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod"/>

    <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter"/>
    <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable"/>
    <rule ref="rulesets/java/unusedcode.xml/UnusedModifier"/>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField"/>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod"/>
</ruleset>
